#
#5000
#500
#100
#2700
#C:\Users\Michael\Desktop\Papers\Computer Science\CS 455\Team Project\Test Object Codes\TestFiles\Aaron\AAPROG5.PRT
#
*ANDREW AARON
*ASSIGNMENT:PROGRAM #5
*DUE: 4/17/2013
*
*DESCRIPTION:
*    THIS PROGRAM WILL MAINTAIN THE BALANCE FOR A SAVINGS ACCOUNT.
*  IT WILL ACCEPT AS INPUT UP TO A 10 DIGIT CARD, AND PERFORM
*  VARIOUS ACTIONS DEPENDING ON THE 1ST CHAR IN THE CARD.
*
*INPUT: VARIOUS CARDS, EACH EITHER 10 OR 4 DIGITS LONG.
*OUTPUT: A REPORT DETAILING THE VARIOUS ACTIONS PERFORMED
*    
*
*REGISTER KEY:
*  REGISTER 1 - HOLDS A POINTER FOR INSERTING $
*  REGISTER 11 - HOLDS THE ADDRESS OF NEXT INSTRUCTION WHEN 
*              CALLING SUBROUTINES.
**********************************************************************
*                            BEGINNING HK
PROJECT5 START         
         STM   14,12,12(13)
         BALR  12,0
         USING HERE,12
HERE     ST    13,SAVEAREA+4
         LA    13,SAVEAREA
         SPACE
**********************************************************************
*                                BODY
         SPACE
         XPRNT HEADER1,36
         XPRNT HEADER2,48
         SPACE                      ***START OF LOOP***
MAINLOOP XREAD CARD,10              READ A LINE OF INPUT
         BC    B'0100',ENDLOOP      IF EOF, END LOOP
         BAL   11,CLEARPAT          CLEAR THE OUTPUT VARIABLE PATTERNS
         CLI   CARD,C'3'            SEE IF A RATE WAS ENTERED
         BC    B'0111',TRYNEXT      IF NOT, TRY SOMETHING ELSE
         BAL   11,SUBRATE           IF SO, GO TO RATE SUBROUTINE
         BC    B'1111',ACTNDONE
TRYNEXT  CLI   CARD,C'1'            IF NOT RATE, CHECK FOR OTHERS
         BC    B'0100',ISINITL      IF NOT 3 AND < 1, ITS 0
         BC    B'0010',ISWITHD      IF NOT 3 AND > 1, ITS 2
         BAL   11,SUBDEPOS          OTHERWISE, ITS 1, SO DEPOSIT
         BC    B'1111',ACTNDONE
ISINITL  BAL   11,SUBINITL          IF 0, INITIALIZE THE BALANCE
         BC    B'1111',ACTNDONE
ISWITHD  BAL   11,SUBWITHD          IF 2, WITHDRAW FROM BALANCE
ACTNDONE XPRNT CC,46                WHEN WE ARE DONE, PRINT RESULTS
         BC    B'1111',MAINLOOP     AND RESTART LOOP
         SPACE                      ***END OF LOOP***
ENDLOOP  XPRNT CC,1                 
         BAL   11,DEPSUMRY            AFTER LOOP ENDS, DO SUMMARIES
         BAL   11,WITSUMRY
         MVC   FINALBAL(16),PATTERN1  SET OUTPUT FOR FINAL BALANCE
         EDMK  FINALBAL(16),BALANCE   PASS IN LAST CURRENT BALANCE
         BCTR  1,0                    AND ADD THE $
         MVI   0(1),C'$'
         XPRNT HEADER3,34             FINALLY, SHOW THE FINAL BALANCE
         SPACE
**********************************************************************
*                               END HK
         L     13,SAVEAREA+4
         LM    14,12,12(13)
         BR    14
SAVEAREA DS    18F
**********************************************************************
*                              VARIABLES
         SPACE
CARD     DS    ZL10           INPUT LINE
AMOUNT   DS    PL6            HOLDS CURRENT AMOUNT
RATE     DS    PL3            HOLDS CURRENT RATE
BALANCE  DS    PL6            HOLDS CURRENT BALANCE
MINBAL   DS    PL6            FOR KEEPING UP WITH MIN BALANCE
TOTLWITD DS    PL6            HOLDS THE TOTAL AMOUNT WITHDRAWN
TOTLDEPO DS    PL6            HOLDS THE TOTAL AMOUNT DEPOSITED
WITCOUNT DS    PL3            HOLDS THE NUM OF WITHDRAWALS
DEPCOUNT DS    PL3            HOLDS THE NUM OF DEPOSITS
*
*FORDIV IS USED FOR CALCULATING INTEREST, AND AVG DEPOSIT/WITHDRAW
FORDIV   DS    0PL9           ENTIRE DIVIDED SPACE
QUOTIENT DS    PL6            QUOTIENT SPACE,INTEREST IS HERE
REMAIN   DS    PL3            REMAINDER SPACE, FOR ROUNDING
*
CC       DC    C'0'           FOR CARRIAGE CONTROL
         DC    C'    '        OUTPUT SPACING
CODE     DS    CL1            OUTPUT LINE FOR CODE
AMOUNTP  DS    XL16           AMOUNT PATTERN OUTPUT LINE
         DC    C' '
RATEP    DS    XL7            RATE PATTERN OUTPUT LINE
BALANCEP DS    XL16           BALANCE PATTERN OUTPUT LINE
*
ZERO     DC    X'F0'
PZERO    DC    P'0'           FOR CLEARING, AND DENOM COMPARE
ONE      DC    X'F1'          TO BE PACKED INTO PONE
PONE     DS    PL1            FOR ROUNDING UP INTEREST
TNTHSND  DC    X'F1F0F0F0F0'  FOR DIVIDING INTEREST
PTNTHSND DS    PL3            
FIVETHS  DC    X'F5F0F0F0'    FOR COMPARING WHEN ROUNDING
PFIVETHS DS    PL3
PATTERN1 DC    X'402020206B2020206B2021204B202060' MONEY PATTERN
PATTERN2 DC    X'402021204B2020'                   RATE PATTERN
PATTERN3 DC    X'402020202120'                     COUNT PATTERN
         SPACE
HEADER1  DC    C'1         SAVINGS   ACCOUNT   REPORT'
HEADER2  DC    C'0TRAN. CODE    AMOUNT    RATE    CURRENT BALANCE'
         SPACE
DEPHEAD1 DC    C'0# DEPOSITS ='
NUMDEPOS DS    XL6            OUTPUT FOR DEPOSIT COUNTER
         SPACE
DEPHEAD2 DC    C'0TOTAL AMOUNT OF DEPOSITS ='
TOTDEPOP DS    XL16           OUTPUT FOR DEPOSIT ACCUMULATOR
         SPACE
DEPHEAD3 DC    C'0AVG. AMOUNT/DEPOSIT      ='
AVGDEPOP DS    XL16           OUTPUT FOR AVG DEPOSIT
         SPACE
WITHEAD1 DC    C'0# WITHDRAWALS ='
NUMWITHD DS    XL6            OUTPUT FOR WITHDRAW COUNTER
         SPACE
WITHEAD2 DC    C'0TOTAL AMOUNT OF WITHDRAWALS ='
TOTWITDP DS    XL16           OUTPUT FOR WITHDRAW ACCUMULATOR
         SPACE
WITHEAD3 DC    C'0AVG. AMOUNT/WITHDRAWAL      ='
AVGWITDP DS    XL16           OUTPUT FOR AVG DEPOSIT
         SPACE
HEADER3  DC    C'0CURRENT BALANCE ='
FINALBAL DS    XL16           OUTPUT FOR BALANCE AT THE END
         SPACE
**********************************************************************
*                             SUBROUTINES
*
***
*  SUBINITL WILL TAKE THE INPUT AND USE IT TO INITIALIZE THE BALANCE.
*  IT WILL ALSO SET THE MIN BALANCE, AND CLEAR THE ACCUMULATORS.
*
         SPACE
SUBINITL MVI   CODE,C'0'                SET CODE OUTPUT
         PACK  AMOUNT(6),CARD+1(9)      GET AMOUNT FROM CARD
         PACK  PZERO(1),ZERO(1)
         PACK  PONE(1),ONE(1)           SET UP PACKED VARIABLES
         PACK  PTNTHSND(3),TNTHSND(5)   
         PACK  PFIVETHS(3),FIVETHS(4)
         ZAP   BALANCE(6),AMOUNT(6)     SET THE BALANCE TO AMOUNT
         ZAP   MINBAL(6),AMOUNT(6)      ALSO SET THE MIN BALANCE
         ZAP   DEPCOUNT(3),PZERO(1)     CLEAR THE COUNTERS
         ZAP   WITCOUNT(3),PZERO(1)
         ZAP   TOTLWITD(6),PZERO(1)     ALSO CLEAR ACCUMULATORS
         ZAP   TOTLDEPO(6),PZERO(1)
         MVC   AMOUNTP(16),PATTERN1     SET THE PATTERNS FOR OUTPUT
         MVC   BALANCEP(16),PATTERN1
         ED    AMOUNTP(16),AMOUNT       SET THE OUTPUT FROM PATTERNS
         ED    BALANCEP(16),BALANCE
         BR    11
         SPACE
*
*  SUBDEPOS WILL TAKE THE INPUT AND DEPOSIT IT INTO THE BALANCE.
*  
         SPACE
SUBDEPOS MVI   CODE,C'1'               SET CODE OUTPUT
         PACK  AMOUNT(6),CARD+1(9)     GET AMOUNT FROM CARD
         AP    BALANCE(6),AMOUNT(6)    UPDATE THE BALANCE USING AMOUNT
         AP    TOTLDEPO(6),AMOUNT(6)   UPDATE DEPOSIT ACCUMULATOR
         MVC   AMOUNTP(16),PATTERN1  
         MVC   BALANCEP(16),PATTERN1   SET PATTERNS FOR OUTPUT
         ED    AMOUNTP(16),AMOUNT
         ED    BALANCEP(16),BALANCE    SET OUPUT FROM PATTERNS
         AP    DEPCOUNT(3),PONE(1)     UPDATE DEPOSIT COUNTER
         BR    11
         SPACE
*
*  SUBWITHD WILL TAKE THE INPUT AND WITHDRAW IT FROM THE BALANCE.
*
         SPACE
SUBWITHD MVI   CODE,C'2'               SET CODE OUTPUT
         PACK  AMOUNT(6),CARD+1(9)     GET AMOUNT FROM CARD
         SP    BALANCE(6),AMOUNT(6)    UPDATE BALANCE
         AP    TOTLWITD(6),AMOUNT(6)   UPDATE WITHDRAW ACCUMULATOR
         CP    MINBAL(6),BALANCE(6)    SEE IF MINBAL NEEDS UPDATE
         BC    B'0100',NONEWMIN
         ZAP   MINBAL(6),BALANCE(6)    IF SO, UPDATE IT
NONEWMIN MVC   AMOUNTP(16),PATTERN1    
         MVC   BALANCEP(16),PATTERN1   SET PATTERNS FOR OUTPUT
         ED    AMOUNTP(16),AMOUNT
         ED    BALANCEP(16),BALANCE    SET OUTPUT FROM PATTERNS
         AP    WITCOUNT(3),PONE(1)     UPDATE WITHDRAW COUNTER
         BR    11
         SPACE
*
*  SUBRATE WILL CALCULATE INTEREST BASED OFF THE GIVEN RATE.
*  IT WILL ADD THE INTEREST TO THE BALANCE, AND UPDATE MINBAL.
*
         SPACE
SUBRATE  MVI   CODE,C'3'                 SET CODE OUTPUT
         PACK  RATE(3),CARD+1(3)         GET RATE FROM CARD
         ZAP   FORDIV(9),MINBAL(6)       MINBAL IS STARTING POINT
         MP    FORDIV(9),RATE(3)         RATE * MINBAL = INTEREST
         DP    FORDIV(9),PTNTHSND(3)     CUT OFF 4 OF THE 6 DECIMALS
         CP    REMAIN(3),PFIVETHS(3)     CHECK TO SEE IF IT ROUNDS
         BC    B'0100',NOROUND 
         AP    QUOTIENT(6),PONE(1)       IF SO, ADD ONE
NOROUND  CP    QUOTIENT(6),PZERO(1)      CHECK TO SEE IF NEG INTEREST
         BC    B'0100',DONTADD           IF SO, DONT ADD INTEREST
         AP    BALANCE(6),QUOTIENT(6)    ADD INTEREST
DONTADD  ZAP   MINBAL(6),BALANCE(6)      SET NEW MINBAL
         MVC   RATEP(7),PATTERN2
         MVC   BALANCEP(16),PATTERN1     SET PATTERNS FOR OUTPUT
         ED    BALANCEP(16),BALANCE      SET OUTPUT FROM PATTERNS
         ED    RATEP(7),RATE
         BR    11
         SPACE
*
*  CLEARPAT WILL CLEAR THE PATTERNS IN THE OUTPUT LINES
*
         SPACE
CLEARPAT MVI   AMOUNTP,C' '
         MVC   AMOUNTP+1(15),AMOUNTP
         MVI   RATEP,C' '
         MVC   RATEP+1(6),RATEP
         MVI   BALANCEP,C' '
         MVC   BALANCEP+1(15),BALANCEP
         BR    11
         SPACE
*
*  DEPSUMRY WILL CALCULATE AND PRINT THE DEPOSIT SUMMARY
*
         SPACE
DEPSUMRY MVC   NUMDEPOS(6),PATTERN3      SET PATTERNS FOR COUNTER
         ED    NUMDEPOS(6),DEPCOUNT
         XPRNT DEPHEAD1,19               OUTPUT COUNTER
         CP    DEPCOUNT(3),PZERO(1)      MAKE SURE COUNTER ISNT 0
         BC    B'0010',NONZERO
         ZAP   DEPCOUNT(3),PONE(1)       IF IT IS, MAKE IT ONE
NONZERO  MVC   TOTDEPOP(16),PATTERN1     SET PATTERNS FOR TOTAL
         EDMK  TOTDEPOP(16),TOTLDEPO
         BCTR  1,0                       SET POINTER FOR $
         MVI   0(1),C'$'                 AND INSERT THE $
         XPRNT DEPHEAD2,43               OUTPUT THE TOTAL
         ZAP   FORDIV(9),TOTLDEPO
         DP    FORDIV(9),DEPCOUNT        FIND AVG DEPOSIT
         AP    REMAIN(3),REMAIN(3)       SEE IF IT SHOULD ROUND
         CP    REMAIN(3),DEPCOUNT(3)
         BC    B'0100',NOROUND2
         AP    QUOTIENT(6),PONE(1)       IF SO, ROUND THE AVG
NOROUND2 MVC   AVGDEPOP(16),PATTERN1     SET PATTERNS FOR AVG
         EDMK  AVGDEPOP(16),QUOTIENT     SET POINTER FOR $
         BCTR  1,0
         MVI   0(1),C'$'
         XPRNT DEPHEAD3,43               OUTPUT THE AVG
         XPRNT CC,1
         BR    11
         SPACE
*
*  WITSUMRY WILL CALCULATE AND PRINT THE WITHDRAW SUMMARY
*
         SPACE
WITSUMRY MVC   NUMWITHD(6),PATTERN3      DO THE SAME AS DEPOSIT
         ED    NUMWITHD(6),WITCOUNT
         XPRNT WITHEAD1,22
         CP    WITCOUNT(3),PZERO(1)
         BC    B'0010',NONZERO2
         ZAP   WITCOUNT(3),PONE(1)
NONZERO2 MVC   TOTWITDP(16),PATTERN1
         EDMK  TOTWITDP(16),TOTLWITD
         BCTR  1,0
         MVI   0(1),C'$'
         XPRNT WITHEAD2,46
         ZAP   FORDIV(9),TOTLWITD
         DP    FORDIV(9),WITCOUNT
         AP    REMAIN(3),REMAIN(3)
         CP    REMAIN(3),WITCOUNT(3)
         BC    B'0100',NOROUND3 
         AP    QUOTIENT(6),PONE(1)
NOROUND3 MVC   AVGWITDP(16),PATTERN1
         EDMK  AVGWITDP(16),QUOTIENT
         BCTR  1,0
         MVI   0(1),C'$'
         XPRNT WITHEAD3,46
         XPRNT CC,1
         BR    11
         SPACE
*
**********************************************************************
*                            END OF PROGRAM
         END   PROJECT5
$ENTRY PROG5.TXT